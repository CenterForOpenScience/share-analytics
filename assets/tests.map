{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","analytics-dashboard/tests/adapters/application.jshint.js","analytics-dashboard/tests/adapters/widget.jshint.js","analytics-dashboard/tests/app.jshint.js","analytics-dashboard/tests/components/agent-detail-widget/component.jshint.js","analytics-dashboard/tests/components/c3-chart/component.jshint.js","analytics-dashboard/tests/components/dropdown-widget/component.jshint.js","analytics-dashboard/tests/components/filter-plaques/component.jshint.js","analytics-dashboard/tests/components/list-widget/component.jshint.js","analytics-dashboard/tests/components/number-widget/component.jshint.js","analytics-dashboard/tests/components/object-detail-widget/component.jshint.js","analytics-dashboard/tests/components/query-widget/component.jshint.js","analytics-dashboard/tests/components/results-list/component.jshint.js","analytics-dashboard/tests/components/search-facet-daterange/component.jshint.js","analytics-dashboard/tests/components/stacked-bars/component.jshint.js","analytics-dashboard/tests/components/text-widget/component.jshint.js","analytics-dashboard/tests/components/widget-adapter/component.jshint.js","analytics-dashboard/tests/controllers/application.jshint.js","analytics-dashboard/tests/controllers/dashboards/dashboard.jshint.js","analytics-dashboard/tests/ember-sinon-qunit/test.js","analytics-dashboard/tests/helpers/add.jshint.js","analytics-dashboard/tests/helpers/destroy-app.js","analytics-dashboard/tests/helpers/destroy-app.jshint.js","analytics-dashboard/tests/helpers/ember-i18n/test-helpers.js","analytics-dashboard/tests/helpers/ember-simple-auth.js","analytics-dashboard/tests/helpers/module-for-acceptance.js","analytics-dashboard/tests/helpers/module-for-acceptance.jshint.js","analytics-dashboard/tests/helpers/resolver.js","analytics-dashboard/tests/helpers/resolver.jshint.js","analytics-dashboard/tests/helpers/start-app.js","analytics-dashboard/tests/helpers/start-app.jshint.js","analytics-dashboard/tests/initializers/component-routes.jshint.js","analytics-dashboard/tests/initializers/promise.jshint.js","analytics-dashboard/tests/instance-initializers/global.jshint.js","analytics-dashboard/tests/integration/components/dropdown-widget/component-test.js","analytics-dashboard/tests/integration/components/dropdown-widget/component-test.jshint.js","analytics-dashboard/tests/integration/components/list-widget/component-test.js","analytics-dashboard/tests/integration/components/list-widget/component-test.jshint.js","analytics-dashboard/tests/integration/components/number-widget/component-test.js","analytics-dashboard/tests/integration/components/number-widget/component-test.jshint.js","analytics-dashboard/tests/integration/components/search-facet-daterange/component-test.js","analytics-dashboard/tests/integration/components/search-facet-daterange/component-test.jshint.js","analytics-dashboard/tests/integration/components/stacked-bars/component-test.js","analytics-dashboard/tests/integration/components/stacked-bars/component-test.jshint.js","analytics-dashboard/tests/models/dashboard.jshint.js","analytics-dashboard/tests/models/institution.jshint.js","analytics-dashboard/tests/models/widget.jshint.js","analytics-dashboard/tests/resolver.jshint.js","analytics-dashboard/tests/router.jshint.js","analytics-dashboard/tests/routes/application.jshint.js","analytics-dashboard/tests/routes/dashboards.jshint.js","analytics-dashboard/tests/routes/dashboards/dashboard.jshint.js","analytics-dashboard/tests/test-helper.js","analytics-dashboard/tests/test-helper.jshint.js","analytics-dashboard/tests/unit/adapters/application-test.js","analytics-dashboard/tests/unit/adapters/application-test.jshint.js","analytics-dashboard/tests/unit/adapters/widget-test.js","analytics-dashboard/tests/unit/adapters/widget-test.jshint.js","analytics-dashboard/tests/unit/controllers/dashboard-test.js","analytics-dashboard/tests/unit/controllers/dashboard-test.jshint.js","analytics-dashboard/tests/unit/controllers/widget-test.js","analytics-dashboard/tests/unit/controllers/widget-test.jshint.js","analytics-dashboard/tests/unit/helpers/add-test.js","analytics-dashboard/tests/unit/helpers/add-test.jshint.js","analytics-dashboard/tests/unit/instance-initializers/global-test.js","analytics-dashboard/tests/unit/instance-initializers/global-test.jshint.js","analytics-dashboard/tests/unit/instance-initializers/global.js-test.js","analytics-dashboard/tests/unit/instance-initializers/global.js-test.jshint.js","analytics-dashboard/tests/unit/models/dashboard-test.js","analytics-dashboard/tests/unit/models/dashboard-test.jshint.js","analytics-dashboard/tests/unit/models/institution-test.js","analytics-dashboard/tests/unit/models/institution-test.jshint.js","analytics-dashboard/tests/unit/models/widget-test.js","analytics-dashboard/tests/unit/models/widget-test.jshint.js","analytics-dashboard/tests/unit/routes/dashboard-test.js","analytics-dashboard/tests/unit/routes/dashboard-test.jshint.js","analytics-dashboard/tests/unit/utils/currency-rounder-test.js","analytics-dashboard/tests/unit/utils/currency-rounder-test.jshint.js","analytics-dashboard/tests/unit/utils/date-interval-test.js","analytics-dashboard/tests/unit/utils/date-interval-test.jshint.js","analytics-dashboard/tests/utils/currency-rounder.jshint.js","analytics-dashboard/tests/utils/date-interval.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('analytics-dashboard/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/adapters/widget.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/widget.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/widget.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/components/agent-detail-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/agent-detail-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/agent-detail-widget/component.js should pass jshint.\\ncomponents/agent-detail-widget/component.js: line 2, col 8, \\'ENV\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('analytics-dashboard/tests/components/c3-chart/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/c3-chart/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/c3-chart/component.js should pass jshint.\\ncomponents/c3-chart/component.js: line 80, col 74, Missing semicolon.\\ncomponents/c3-chart/component.js: line 88, col 24, Expected \\'}\\' to match \\'{\\' from line 62 and instead saw \\'function\\'.\\ncomponents/c3-chart/component.js: line 88, col 32, Bad invocation.\\ncomponents/c3-chart/component.js: line 88, col 39, Expected \\')\\' and instead saw \\'{\\'.\\ncomponents/c3-chart/component.js: line 88, col 40, Missing semicolon.\\ncomponents/c3-chart/component.js: line 90, col 38, Missing semicolon.\\ncomponents/c3-chart/component.js: line 98, col 9, Unrecoverable syntax error. (23% scanned).\\n\\n7 errors');\n  });\n});","define('analytics-dashboard/tests/components/dropdown-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/dropdown-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/dropdown-widget/component.js should pass jshint.\\ncomponents/dropdown-widget/component.js: line 42, col 54, Missing semicolon.\\ncomponents/dropdown-widget/component.js: line 56, col 30, Expected \\'}\\' to match \\'{\\' from line 3 and instead saw \\'function\\'.\\ncomponents/dropdown-widget/component.js: line 56, col 38, Bad invocation.\\ncomponents/dropdown-widget/component.js: line 56, col 50, Expected \\')\\' and instead saw \\'{\\'.\\ncomponents/dropdown-widget/component.js: line 56, col 51, Missing semicolon.\\ncomponents/dropdown-widget/component.js: line 58, col 34, Missing semicolon.\\ncomponents/dropdown-widget/component.js: line 65, col 41, Unrecoverable syntax error. (29% scanned).\\n\\n7 errors');\n  });\n});","define('analytics-dashboard/tests/components/filter-plaques/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/filter-plaques/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/filter-plaques/component.js should pass jshint.\\ncomponents/filter-plaques/component.js: line 16, col 8, Missing semicolon.\\ncomponents/filter-plaques/component.js: line 23, col 34, Missing semicolon.\\ncomponents/filter-plaques/component.js: line 33, col 38, Expected \\'===\\' and instead saw \\'==\\'.\\ncomponents/filter-plaques/component.js: line 33, col 20, Confusing use of \\'!\\'.\\ncomponents/filter-plaques/component.js: line 44, col 34, Missing semicolon.\\ncomponents/filter-plaques/component.js: line 47, col 30, Missing semicolon.\\ncomponents/filter-plaques/component.js: line 55, col 30, Expected \\'}\\' to match \\'{\\' from line 5 and instead saw \\'function\\'.\\ncomponents/filter-plaques/component.js: line 55, col 38, Bad invocation.\\ncomponents/filter-plaques/component.js: line 55, col 50, Expected \\')\\' and instead saw \\'{\\'.\\ncomponents/filter-plaques/component.js: line 55, col 51, Missing semicolon.\\ncomponents/filter-plaques/component.js: line 56, col 32, Missing semicolon.\\ncomponents/filter-plaques/component.js: line 63, col 39, Unrecoverable syntax error. (75% scanned).\\n\\n12 errors');\n  });\n});","define('analytics-dashboard/tests/components/list-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/list-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/list-widget/component.js should pass jshint.\\ncomponents/list-widget/component.js: line 13, col 18, Missing semicolon.\\ncomponents/list-widget/component.js: line 16, col 44, Expected \\'===\\' and instead saw \\'==\\'.\\ncomponents/list-widget/component.js: line 17, col 13, \\'data\\' used out of scope.\\ncomponents/list-widget/component.js: line 44, col 30, \\'data\\' used out of scope.\\ncomponents/list-widget/component.js: line 60, col 30, Expected \\'}\\' to match \\'{\\' from line 3 and instead saw \\'function\\'.\\ncomponents/list-widget/component.js: line 60, col 38, Bad invocation.\\ncomponents/list-widget/component.js: line 60, col 45, Expected \\')\\' and instead saw \\'{\\'.\\ncomponents/list-widget/component.js: line 60, col 46, Missing semicolon.\\ncomponents/list-widget/component.js: line 61, col 34, Missing semicolon.\\ncomponents/list-widget/component.js: line 68, col 52, Unrecoverable syntax error. (73% scanned).\\n\\n10 errors');\n  });\n});","define('analytics-dashboard/tests/components/number-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/number-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/number-widget/component.js should pass jshint.\\ncomponents/number-widget/component.js: line 33, col 17, \\'facet\\' is defined but never used.\\ncomponents/number-widget/component.js: line 35, col 40, \\'item\\' is not defined.\\ncomponents/number-widget/component.js: line 36, col 40, \\'item\\' is not defined.\\n\\n3 errors');\n  });\n});","define('analytics-dashboard/tests/components/object-detail-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/object-detail-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/object-detail-widget/component.js should pass jshint.\\ncomponents/object-detail-widget/component.js: line 28, col 12, Expected \\'{\\' and instead saw \\'var\\'.\\ncomponents/object-detail-widget/component.js: line 37, col 18, Expected \\'{\\' and instead saw \\'r\\'.\\ncomponents/object-detail-widget/component.js: line 39, col 18, Expected \\'{\\' and instead saw \\'r\\'.\\ncomponents/object-detail-widget/component.js: line 39, col 37, Expected \\'===\\' and instead saw \\'==\\'.\\ncomponents/object-detail-widget/component.js: line 27, col 14, \\'library\\' used out of scope.\\ncomponents/object-detail-widget/component.js: line 30, col 9, \\'library\\' used out of scope.\\ncomponents/object-detail-widget/component.js: line 51, col 16, \\'library\\' used out of scope.\\ncomponents/object-detail-widget/component.js: line 102, col 60, Missing semicolon.\\ncomponents/object-detail-widget/component.js: line 112, col 33, Missing semicolon.\\ncomponents/object-detail-widget/component.js: line 121, col 135, Missing semicolon.\\ncomponents/object-detail-widget/component.js: line 124, col 137, Missing semicolon.\\ncomponents/object-detail-widget/component.js: line 127, col 133, Missing semicolon.\\ncomponents/object-detail-widget/component.js: line 2, col 8, \\'ENV\\' is defined but never used.\\n\\n13 errors');\n  });\n});","define('analytics-dashboard/tests/components/query-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/query-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/query-widget/component.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/components/results-list/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/results-list/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/results-list/component.js should pass jshint.\\ncomponents/results-list/component.js: line 14, col 33, Missing semicolon.\\ncomponents/results-list/component.js: line 16, col 16, Duplicate key \\'pagebackbtn\\'.\\ncomponents/results-list/component.js: line 18, col 22, Expected \\'===\\' and instead saw \\'==\\'.\\ncomponents/results-list/component.js: line 24, col 17, Duplicate key \\'pagenextbtn\\'.\\ncomponents/results-list/component.js: line 32, col 57, Missing semicolon.\\ncomponents/results-list/component.js: line 33, col 20, Missing semicolon.\\ncomponents/results-list/component.js: line 40, col 98, Missing semicolon.\\ncomponents/results-list/component.js: line 46, col 133, Missing semicolon.\\ncomponents/results-list/component.js: line 49, col 135, Missing semicolon.\\ncomponents/results-list/component.js: line 52, col 137, Missing semicolon.\\ncomponents/results-list/component.js: line 55, col 133, Missing semicolon.\\ncomponents/results-list/component.js: line 58, col 83, Missing semicolon.\\ncomponents/results-list/component.js: line 78, col 65, Missing semicolon.\\ncomponents/results-list/component.js: line 88, col 65, Missing semicolon.\\n\\n14 errors');\n  });\n});","define('analytics-dashboard/tests/components/search-facet-daterange/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-facet-daterange/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-facet-daterange/component.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/components/stacked-bars/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/stacked-bars/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/stacked-bars/component.js should pass jshint.\\ncomponents/stacked-bars/component.js: line 40, col 58, Missing semicolon.\\ncomponents/stacked-bars/component.js: line 94, col 11, Missing semicolon.\\n\\n2 errors');\n  });\n});","define('analytics-dashboard/tests/components/text-widget/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/text-widget/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/text-widget/component.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/components/widget-adapter/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/widget-adapter/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/widget-adapter/component.js should pass jshint.\\ncomponents/widget-adapter/component.js: line 61, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 89, col 17, A generator function shall contain a yield statement.\\ncomponents/widget-adapter/component.js: line 94, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 120, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 146, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 179, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 212, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 238, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 264, col 37, \\'value\\' is defined but never used.\\ncomponents/widget-adapter/component.js: line 328, col 33, Missing semicolon.\\ncomponents/widget-adapter/component.js: line 343, col 6, Missing semicolon.\\ncomponents/widget-adapter/component.js: line 379, col 46, Missing semicolon.\\ncomponents/widget-adapter/component.js: line 427, col 28, Expected \\'}\\' to match \\'{\\' from line 349 and instead saw \\'function\\'.\\ncomponents/widget-adapter/component.js: line 427, col 36, Bad invocation.\\ncomponents/widget-adapter/component.js: line 427, col 39, Expected \\')\\' and instead saw \\'{\\'.\\ncomponents/widget-adapter/component.js: line 427, col 40, Missing semicolon.\\ncomponents/widget-adapter/component.js: line 444, col 33, Missing semicolon.\\ncomponents/widget-adapter/component.js: line 447, col 25, Missing semicolon.\\ncomponents/widget-adapter/component.js: line 467, col 9, Unrecoverable syntax error. (74% scanned).\\n\\n19 errors');\n  });\n});","define('analytics-dashboard/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/controllers/dashboards/dashboard.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/dashboards/dashboard.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/dashboards/dashboard.js should pass jshint.\\ncontrollers/dashboards/dashboard.js: line 73, col 28, \\'widget\\' is defined but never used.\\ncontrollers/dashboards/dashboard.js: line 85, col 25, \\'r\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('analytics-dashboard/tests/ember-sinon-qunit/test', ['exports', 'ember', 'sinon', 'qunit', 'ember-qunit'], function (exports, _ember, _sinon, _qunit, _emberQunit) {\n  exports['default'] = test;\n\n  _sinon['default'].expectation.fail = _sinon['default'].assert.fail = function (msg) {\n    _qunit['default'].ok(false, msg);\n  };\n\n  _sinon['default'].assert.pass = function (assertion) {\n    _qunit['default'].ok(true, assertion);\n  };\n\n  _sinon['default'].config = {\n    injectIntoThis: false,\n    injectInto: null,\n    properties: ['spy', 'stub', 'mock', 'sandbox'],\n    useFakeTimers: false,\n    useFakeServer: false\n  };\n\n  function test(testName, callback) {\n    function sinonWrapper() {\n      var context = this;\n      if (_ember['default'].isBlank(context)) {\n        context = {};\n      }\n      _sinon['default'].config.injectInto = context;\n\n      return _sinon['default'].test(callback).apply(context, arguments);\n    }\n\n    return (0, _emberQunit.test)(testName, sinonWrapper);\n  }\n});","define('analytics-dashboard/tests/helpers/add.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/add.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/add.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('analytics-dashboard/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('analytics-dashboard/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  ;\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  ;\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n\n  ;\n});","define('analytics-dashboard/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'analytics-dashboard/tests/helpers/start-app', 'analytics-dashboard/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _analyticsDashboardTestsHelpersStartApp, _analyticsDashboardTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _analyticsDashboardTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _analyticsDashboardTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('analytics-dashboard/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/helpers/resolver', ['exports', 'analytics-dashboard/resolver', 'analytics-dashboard/config/environment'], function (exports, _analyticsDashboardResolver, _analyticsDashboardConfigEnvironment) {\n\n  var resolver = _analyticsDashboardResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _analyticsDashboardConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _analyticsDashboardConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('analytics-dashboard/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/helpers/start-app', ['exports', 'ember', 'analytics-dashboard/app', 'analytics-dashboard/config/environment'], function (exports, _ember, _analyticsDashboardApp, _analyticsDashboardConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _analyticsDashboardConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _analyticsDashboardApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('analytics-dashboard/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/initializers/component-routes.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/component-routes.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/component-routes.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/initializers/promise.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/promise.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/promise.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/instance-initializers/global.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | instance-initializers/global.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'instance-initializers/global.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/integration/components/dropdown-widget/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('dropdown-widget', 'Integration | Component | dropdown widget', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 19\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'dropdown-widget', ['loc', [null, [1, 0], [1, 19]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'dropdown-widget', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('analytics-dashboard/tests/integration/components/dropdown-widget/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/dropdown-widget/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/dropdown-widget/component-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/integration/components/list-widget/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('list-widget', 'Integration | Component | list widget', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 15\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'list-widget', ['loc', [null, [1, 0], [1, 15]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'list-widget', [], [], 0, null, ['loc', [null, [2, 4], [4, 20]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('analytics-dashboard/tests/integration/components/list-widget/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/list-widget/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/list-widget/component-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/integration/components/number-widget/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('number-widget', 'Integration | Component | number widget', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 17\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'number-widget', ['loc', [null, [1, 0], [1, 17]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'number-widget', [], [], 0, null, ['loc', [null, [2, 4], [4, 22]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('analytics-dashboard/tests/integration/components/number-widget/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/number-widget/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/number-widget/component-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/integration/components/search-facet-daterange/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-facet-daterange', 'Integration | Component | search facet daterange', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 26\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'search-facet-daterange', ['loc', [null, [1, 0], [1, 26]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'search-facet-daterange', [], [], 0, null, ['loc', [null, [2, 4], [4, 31]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('analytics-dashboard/tests/integration/components/search-facet-daterange/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-facet-daterange/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-facet-daterange/component-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/integration/components/stacked-bars/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('stacked-bars', 'Integration | Component | stacked bars', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'stacked-bars', ['loc', [null, [1, 0], [1, 16]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'stacked-bars', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('analytics-dashboard/tests/integration/components/stacked-bars/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/stacked-bars/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/stacked-bars/component-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/models/dashboard.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/dashboard.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/dashboard.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/models/institution.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/institution.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/institution.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/models/widget.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/widget.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/widget.js should pass jshint.\\nmodels/widget.js: line 3, col 10, \\'belongsTo\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('analytics-dashboard/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/routes/dashboards.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/dashboards.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/dashboards.js should pass jshint.\\nroutes/dashboards.js: line 6, col 41, Expected \\'===\\' and instead saw \\'==\\'.\\nroutes/dashboards.js: line 2, col 8, \\'AuthenticatedRouteMixin\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('analytics-dashboard/tests/routes/dashboards/dashboard.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/dashboards/dashboard.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/dashboards/dashboard.js should pass jshint.\\nroutes/dashboards/dashboard.js: line 210, col 54, \\'transition\\' is defined but never used.\\nroutes/dashboards/dashboard.js: line 229, col 41, \\'queryParams\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('analytics-dashboard/tests/test-helper', ['exports', 'analytics-dashboard/tests/helpers/resolver', 'ember-qunit'], function (exports, _analyticsDashboardTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_analyticsDashboardTestsHelpersResolver['default']);\n});","define('analytics-dashboard/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('analytics-dashboard/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/adapters/widget-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:widget', 'Unit | Adapter | widget', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('analytics-dashboard/tests/unit/adapters/widget-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/widget-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/widget-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/controllers/dashboard-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:dashboard', 'Unit | Controller | dashboard', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('analytics-dashboard/tests/unit/controllers/dashboard-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/dashboard-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/dashboard-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/controllers/widget-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:widget', 'Unit | Controller | widget', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('analytics-dashboard/tests/unit/controllers/widget-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/widget-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/widget-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/helpers/add-test', ['exports', 'tc3/helpers/add', 'qunit'], function (exports, _tc3HelpersAdd, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | add');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _tc3HelpersAdd.add)([42]);\n    assert.ok(result);\n  });\n});","define('analytics-dashboard/tests/unit/helpers/add-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/add-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/add-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/instance-initializers/global-test', ['exports', 'ember', 'tc3/instance-initializers/global', 'qunit', 'analytics-dashboard/tests/helpers/destroy-app'], function (exports, _ember, _tc3InstanceInitializersGlobal, _qunit, _analyticsDashboardTestsHelpersDestroyApp) {\n\n  (0, _qunit.module)('Unit | Instance Initializer | global', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      _ember['default'].run(function () {\n        _this.application = _ember['default'].Application.create();\n        _this.appInstance = _this.application.buildInstance();\n      });\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(this.appInstance, 'destroy');\n      (0, _analyticsDashboardTestsHelpersDestroyApp['default'])(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _tc3InstanceInitializersGlobal.initialize)(this.appInstance);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('analytics-dashboard/tests/unit/instance-initializers/global-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/instance-initializers/global-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/instance-initializers/global-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/instance-initializers/global.js-test', ['exports', 'ember', 'tc3/instance-initializers/global.js', 'qunit', 'analytics-dashboard/tests/helpers/destroy-app'], function (exports, _ember, _tc3InstanceInitializersGlobalJs, _qunit, _analyticsDashboardTestsHelpersDestroyApp) {\n\n  (0, _qunit.module)('Unit | Instance Initializer | global.js', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      _ember['default'].run(function () {\n        _this.application = _ember['default'].Application.create();\n        _this.appInstance = _this.application.buildInstance();\n      });\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(this.appInstance, 'destroy');\n      (0, _analyticsDashboardTestsHelpersDestroyApp['default'])(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _tc3InstanceInitializersGlobalJs.initialize)(this.appInstance);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('analytics-dashboard/tests/unit/instance-initializers/global.js-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/instance-initializers/global.js-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/instance-initializers/global.js-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/models/dashboard-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('dashboard', 'Unit | Model | dashboard', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('analytics-dashboard/tests/unit/models/dashboard-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/dashboard-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/dashboard-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/models/institution-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('institution', 'Unit | Model | institution', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('analytics-dashboard/tests/unit/models/institution-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/institution-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/institution-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/models/widget-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('widget', 'Unit | Model | widget', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('analytics-dashboard/tests/unit/models/widget-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/widget-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/widget-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/routes/dashboard-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:dashboard', 'Unit | Route | dashboard', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('analytics-dashboard/tests/unit/routes/dashboard-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/dashboard-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/dashboard-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/unit/utils/currency-rounder-test', ['exports', 'analytics-dashboard/utils/currency-rounder', 'qunit'], function (exports, _analyticsDashboardUtilsCurrencyRounder, _qunit) {\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('works with billions', function (assert) {\n    var rawValue = 180000000123;\n    var result = (0, _analyticsDashboardUtilsCurrencyRounder['default'])(rawValue);\n    assert.equal(result, '180B');\n  });\n});","define('analytics-dashboard/tests/unit/utils/currency-rounder-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/utils/currency-rounder-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'unit/utils/currency-rounder-test.js should pass jshint.\\nunit/utils/currency-rounder-test.js: line 2, col 10, \\'module\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('analytics-dashboard/tests/unit/utils/date-interval-test', ['exports', 'analytics-dashboard/utils/date-interval', 'qunit'], function (exports, _analyticsDashboardUtilsDateInterval, _qunit) {\n\n  (0, _qunit.module)('Unit | Utility | date interval');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _analyticsDashboardUtilsDateInterval['default'])();\n    assert.ok(result);\n  });\n});","define('analytics-dashboard/tests/unit/utils/date-interval-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/utils/date-interval-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/date-interval-test.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/utils/currency-rounder.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | utils/currency-rounder.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/currency-rounder.js should pass jshint.');\n  });\n});","define('analytics-dashboard/tests/utils/date-interval.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | utils/date-interval.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/date-interval.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('analytics-dashboard/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjljIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}